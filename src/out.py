from generator.types import *
from generator.lexer import Token
from typing import List, Tuple, Union, Any, Literal, Dict, Callable, Optional


class Parser:
    def __init__(
        self,
        grammar: Grammar,
        callbacks: Optional[Dict[str, Callable[[List[Any]], Any]]] = None,
    ):
        self.callbacks = callbacks
        self.rule_map = {rule.name: rule for rule in grammar.rules}

    def __take_leaf(
        self, l: Leaf, tokens: List[Token], pos: int
    ) -> Union[Tuple[Any, int], Literal[False]]:
        if pos >= len(tokens):
            return False
        if l.type == "LITERAL":
            # in the case of literals, l.value
            # contains the exact literal to match
            if tokens[pos].value != l.value:
                return False
            return tokens[pos], pos + 1
        elif l.type == "TERMINAL":
            # in the case of terminals, l.value
            # contains the type of the nonterminal
            if tokens[pos].type != l.value:
                return False
            return tokens[pos], pos + 1
        else:
            # in the case of nonterminals, l.value
            # contains the name of the nonterminal
            result = self.__check_rule(l.value, tokens, pos)
            if not result:
                return False
            return result

    def __take_leaves(
        self, l: List[Leaf], tokens: List[Token], pos: int
    ) -> Union[Tuple[List[Any], int], Literal[False]]:
        if pos >= len(tokens):
            return False
        result = []
        for leaf in l:
            r = self.__take_leaf(leaf, tokens, pos)
            if not r:
                return False
            res, pos = r
            result.append(res)
        return result, pos

    def __check_production(self, prod: Production, tokens: List[Token], pos: int):
        result = []
        for part in prod.items:
            if part.optional:
                # try taking, but it's ok if it fails
                r = self.__take_leaves(part.items, tokens, pos)
                if r:
                    # it actually succeeded, go with this
                    res, pos = r
                    result.append(res)
            elif part.star:
                # try taking any amount of this
                r = self.__take_leaves(part.items, tokens, pos)
                while r:
                    res, pos = r
                    result.append(res)
                    r = self.__take_leaves(part.items, tokens, pos)
            else:
                # must take this item
                r = self.__take_leaves(part.items, tokens, pos)
                if not r:
                    return False
                res, pos = r
                result.append(res)
        return result, pos

    def __check_rule(self, rule: str, tokens: List[Token], pos: int):
        actual_rule = self.rule_map[rule]
        for prod in actual_rule.productions:
            r = self.__check_production(prod, tokens, pos)
            if r:
                return r
        return False

    def parse(
        self, start_symbol: str, tokens: List[Token]
    ) -> Union[list, Literal[False]]:
        result = self.__check_rule(start_symbol, tokens, 0)
        if result:
            return result[0]
        return False

grammar = Grammar(rules=[Rule(name='primary_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='CONSTANT')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='STRINGLITERAL')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')')])])]), Rule(name='postfix_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='primary_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression'), Leaf(type='LITERAL', value='(')]), ProductionPart(optional=True, star=False, items=[Leaf(type='NONTERMINAL', value='argument_expression_list')]), ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression'), Leaf(type='LITERAL', value='.'), Leaf(type='TERMINAL', value='IDENTIFIER')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression'), Leaf(type='LITERAL', value='->'), Leaf(type='TERMINAL', value='IDENTIFIER')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression'), Leaf(type='LITERAL', value='++')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression'), Leaf(type='LITERAL', value='--')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='type_name'), Leaf(type='LITERAL', value=')'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='initializer_list'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='type_name'), Leaf(type='LITERAL', value=')'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='initializer_list'), Leaf(type='LITERAL', value=','), Leaf(type='LITERAL', value='}')])])]), Rule(name='argument_expression_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='assignment_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='argument_expression_list')]), ProductionPart(optional=False, star=True, items=[Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='assignment_expression')])])]), Rule(name='unary_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='postfix_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='PLUSPLUS'), Leaf(type='NONTERMINAL', value='unary_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='MINUSMINUS'), Leaf(type='NONTERMINAL', value='unary_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='unary_operator'), Leaf(type='NONTERMINAL', value='cast_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='SIZEOF'), Leaf(type='NONTERMINAL', value='unary_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='SIZEOF'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='type_name'), Leaf(type='LITERAL', value=')')])])]), Rule(name='unary_operator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='&')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='*')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='+')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='-')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='~')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='!')])])]), Rule(name='cast_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='unary_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='type_name'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='cast_expression')])])]), Rule(name='multiplicative_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='cast_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='multiplicative_expression'), Leaf(type='LITERAL', value='*'), Leaf(type='NONTERMINAL', value='cast_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='multiplicative_expression'), Leaf(type='LITERAL', value='/'), Leaf(type='NONTERMINAL', value='cast_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='multiplicative_expression'), Leaf(type='LITERAL', value='%'), Leaf(type='NONTERMINAL', value='cast_expression')])])]), Rule(name='additive_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='multiplicative_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='additive_expression'), Leaf(type='LITERAL', value='+'), Leaf(type='NONTERMINAL', value='multiplicative_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='additive_expression'), Leaf(type='LITERAL', value='-'), Leaf(type='NONTERMINAL', value='multiplicative_expression')])])]), Rule(name='shift_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='additive_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='shift_expression'), Leaf(type='TERMINAL', value='LSHIFT'), Leaf(type='NONTERMINAL', value='additive_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='shift_expression'), Leaf(type='TERMINAL', value='RSHIFT'), Leaf(type='NONTERMINAL', value='additive_expression')])])]), Rule(name='relational_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='shift_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='relational_expression'), Leaf(type='LITERAL', value='<'), Leaf(type='NONTERMINAL', value='shift_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='relational_expression'), Leaf(type='LITERAL', value='>'), Leaf(type='NONTERMINAL', value='shift_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='relational_expression'), Leaf(type='TERMINAL', value='LEQ'), Leaf(type='NONTERMINAL', value='shift_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='relational_expression'), Leaf(type='TERMINAL', value='GEQ'), Leaf(type='NONTERMINAL', value='shift_expression')])])]), Rule(name='equality_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='relational_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='equality_expression'), Leaf(type='TERMINAL', value='EQEQ'), Leaf(type='NONTERMINAL', value='relational_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='equality_expression'), Leaf(type='TERMINAL', value='NEQ'), Leaf(type='NONTERMINAL', value='relational_expression')])])]), Rule(name='and_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='equality_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='and_expression'), Leaf(type='LITERAL', value='&'), Leaf(type='NONTERMINAL', value='equality_expression')])])]), Rule(name='exclusive_or_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='and_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='exclusive_or_expression'), Leaf(type='LITERAL', value='^'), Leaf(type='NONTERMINAL', value='and_expression')])])]), Rule(name='inclusive_or_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='exclusive_or_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='inclusive_or_expression'), Leaf(type='LITERAL', value='|'), Leaf(type='NONTERMINAL', value='exclusive_or_expression')])])]), Rule(name='logical_and_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='inclusive_or_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='logical_and_expression'), Leaf(type='TERMINAL', value='LAND'), Leaf(type='NONTERMINAL', value='inclusive_or_expression')])])]), Rule(name='logical_or_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='logical_and_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='logical_or_expression'), Leaf(type='TERMINAL', value='LOR'), Leaf(type='NONTERMINAL', value='logical_and_expression')])])]), Rule(name='conditional_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='logical_or_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='logical_or_expression'), Leaf(type='LITERAL', value='?'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=':'), Leaf(type='NONTERMINAL', value='conditional_expression')])])]), Rule(name='assignment_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='conditional_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='unary_expression'), Leaf(type='NONTERMINAL', value='assignment_operator'), Leaf(type='NONTERMINAL', value='assignment_expression')])])]), Rule(name='assignment_operator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='=')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='TIMESEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='DIVEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='MODEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='PLUSEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='MINUSEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='LSHIFTEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='RSHIFTEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='ANDEQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='XOREQ')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='OREQ')])])]), Rule(name='expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='assignment_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='assignment_expression')])])]), Rule(name='constant_expression', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='conditional_expression')])])]), Rule(name='declaration', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers'), Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers'), Leaf(type='NONTERMINAL', value='init_declarator_list'), Leaf(type='LITERAL', value=';')])])]), Rule(name='declaration_specifiers', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='storage_class_specifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='storage_class_specifier'), Leaf(type='NONTERMINAL', value='declaration_specifiers')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_specifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_specifier'), Leaf(type='NONTERMINAL', value='declaration_specifiers')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_qualifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_qualifier'), Leaf(type='NONTERMINAL', value='declaration_specifiers')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='function_specifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='function_specifier'), Leaf(type='NONTERMINAL', value='declaration_specifiers')])])]), Rule(name='init_declarator_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='init_declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='init_declarator_list'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='init_declarator')])])]), Rule(name='init_declarator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declarator'), Leaf(type='LITERAL', value='='), Leaf(type='NONTERMINAL', value='initializer')])])]), Rule(name='storage_class_specifier', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='TYPEDEF')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='EXTERN')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='STATIC')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='AUTO')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='REGISTER')])])]), Rule(name='type_specifier', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='VOID')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='CHAR')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='SHORT')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='INT')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='LONG')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FLOAT')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='DOUBLE')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='SIGNED')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='UNSIGNED')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='UBOOL')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='UCOMPLEX')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_or_union_specifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='enum_specifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='typedef_name')])])]), Rule(name='struct_or_union_specifier', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_or_union'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='struct_declaration_list'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_or_union'), Leaf(type='TERMINAL', value='IDENTIFIER'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='struct_declaration_list'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_or_union'), Leaf(type='TERMINAL', value='IDENTIFIER')])])]), Rule(name='struct_or_union', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='STRUCT')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='UNION')])])]), Rule(name='struct_declaration_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_declaration')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_declaration_list'), Leaf(type='NONTERMINAL', value='struct_declaration')])])]), Rule(name='struct_declaration', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='specifier_qualifier_list'), Leaf(type='NONTERMINAL', value='struct_declarator_list')])])]), Rule(name='specifier_qualifier_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_specifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_specifier'), Leaf(type='NONTERMINAL', value='specifier_qualifier_list')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_qualifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_qualifier'), Leaf(type='NONTERMINAL', value='specifier_qualifier_list')])])]), Rule(name='struct_declarator_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='struct_declarator_list'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='struct_declarator')])])]), Rule(name='struct_declarator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value=':'), Leaf(type='NONTERMINAL', value='constant_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declarator'), Leaf(type='LITERAL', value=':'), Leaf(type='NONTERMINAL', value='constant_expression')])])]), Rule(name='enum_specifier', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='ENUM'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='enumerator_list'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='ENUM'), Leaf(type='TERMINAL', value='IDENTIFIER'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='enumerator_list'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='ENUM'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='enumerator_list'), Leaf(type='LITERAL', value=','), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='ENUM'), Leaf(type='TERMINAL', value='IDENTIFIER'), Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='enumerator_list'), Leaf(type='LITERAL', value=','), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='ENUM'), Leaf(type='TERMINAL', value='IDENTIFIER')])])]), Rule(name='enumerator_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='enumerator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='enumerator_list'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='enumerator')])])]), Rule(name='enumerator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER'), Leaf(type='LITERAL', value='='), Leaf(type='NONTERMINAL', value='constant_expression')])])]), Rule(name='type_qualifier', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='CONST')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='RESTRICT')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='VOLATILE')])])]), Rule(name='function_specifier', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='INLINE')])])]), Rule(name='declarator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='pointer'), Leaf(type='NONTERMINAL', value='direct_declarator')])])]), Rule(name='direct_declarator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='declarator'), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='TERMINAL', value='STATIC'), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='TERMINAL', value='STATIC'), Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='TERMINAL', value='STATIC'), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='LITERAL', value='*'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='LITERAL', value='*'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='parameter_type_list'), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_declarator'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='identifier_list'), Leaf(type='LITERAL', value=')')])])]), Rule(name='pointer', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='*')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='*'), Leaf(type='NONTERMINAL', value='type_qualifier_list')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='*'), Leaf(type='NONTERMINAL', value='pointer')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='*'), Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='NONTERMINAL', value='pointer')])])]), Rule(name='type_qualifier_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_qualifier')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='type_qualifier_list'), Leaf(type='NONTERMINAL', value='type_qualifier')])])]), Rule(name='parameter_type_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='parameter_list')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='parameter_list'), Leaf(type='LITERAL', value=','), Leaf(type='TERMINAL', value='DOTDOTDOT')])])]), Rule(name='parameter_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='parameter_declaration')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='parameter_list'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='parameter_declaration')])])]), Rule(name='parameter_declaration', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers'), Leaf(type='NONTERMINAL', value='declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers'), Leaf(type='NONTERMINAL', value='abstract_declarator')])])]), Rule(name='identifier_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='identifier_list'), Leaf(type='LITERAL', value=','), Leaf(type='TERMINAL', value='IDENTIFIER')])])]), Rule(name='type_name', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='specifier_qualifier_list')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='specifier_qualifier_list'), Leaf(type='NONTERMINAL', value='abstract_declarator')])])]), Rule(name='abstract_declarator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='pointer')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_abstract_declarator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='pointer'), Leaf(type='NONTERMINAL', value='direct_abstract_declarator')])])]), Rule(name='direct_abstract_declarator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='abstract_declarator'), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='['), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_abstract_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_abstract_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='assignment_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='['), Leaf(type='LITERAL', value='*'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_abstract_declarator'), Leaf(type='LITERAL', value='['), Leaf(type='LITERAL', value='*'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_abstract_declarator'), Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='parameter_type_list'), Leaf(type='LITERAL', value=')')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='direct_abstract_declarator'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='parameter_type_list'), Leaf(type='LITERAL', value=')')])])]), Rule(name='typedef_name', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER')])])]), Rule(name='initializer', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='assignment_expression')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='initializer_list'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='initializer_list'), Leaf(type='LITERAL', value=','), Leaf(type='LITERAL', value='}')])])]), Rule(name='initializer_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='initializer')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='designation'), Leaf(type='NONTERMINAL', value='initializer')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='initializer_list'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='initializer')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='initializer_list'), Leaf(type='LITERAL', value=','), Leaf(type='NONTERMINAL', value='designation'), Leaf(type='NONTERMINAL', value='initializer')])])]), Rule(name='designation', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='designator_list'), Leaf(type='LITERAL', value='=')])])]), Rule(name='designator_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='designator')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='designator_list'), Leaf(type='NONTERMINAL', value='designator')])])]), Rule(name='designator', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='['), Leaf(type='NONTERMINAL', value='constant_expression'), Leaf(type='LITERAL', value=']')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='.'), Leaf(type='TERMINAL', value='IDENTIFIER')])])]), Rule(name='statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='labeled_statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='compound_statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='expression_statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='selection_statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='iteration_statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='jump_statement')])])]), Rule(name='labeled_statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IDENTIFIER'), Leaf(type='LITERAL', value=':'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='CASE'), Leaf(type='NONTERMINAL', value='constant_expression'), Leaf(type='LITERAL', value=':'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='DEFAULT'), Leaf(type='LITERAL', value=':'), Leaf(type='NONTERMINAL', value='statement')])])]), Rule(name='compound_statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='{'), Leaf(type='LITERAL', value='}')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value='{'), Leaf(type='NONTERMINAL', value='block_item_list'), Leaf(type='LITERAL', value='}')])])]), Rule(name='block_item_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='block_item')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='block_item_list'), Leaf(type='NONTERMINAL', value='block_item')])])]), Rule(name='block_item', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='statement')])])]), Rule(name='expression_statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';')])])]), Rule(name='selection_statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IF'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='IF'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement'), Leaf(type='TERMINAL', value='ELSE'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='SWITCH'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])])]), Rule(name='iteration_statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='WHILE'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='DO'), Leaf(type='NONTERMINAL', value='statement'), Leaf(type='TERMINAL', value='WHILE'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='declaration'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='declaration'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='declaration'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='FOR'), Leaf(type='LITERAL', value='('), Leaf(type='NONTERMINAL', value='declaration'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=')'), Leaf(type='NONTERMINAL', value='statement')])])]), Rule(name='jump_statement', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='GOTO'), Leaf(type='TERMINAL', value='IDENTIFIER'), Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='CONTINUE'), Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='BREAK'), Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='RETURN'), Leaf(type='LITERAL', value=';')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='TERMINAL', value='RETURN'), Leaf(type='NONTERMINAL', value='expression'), Leaf(type='LITERAL', value=';')])])]), Rule(name='translation_unit', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='external_declaration')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='translation_unit'), Leaf(type='NONTERMINAL', value='external_declaration')])])]), Rule(name='external_declaration', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='function_definition')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration')])])]), Rule(name='function_definition', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers'), Leaf(type='NONTERMINAL', value='declarator'), Leaf(type='NONTERMINAL', value='compound_statement')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_specifiers'), Leaf(type='NONTERMINAL', value='declarator'), Leaf(type='NONTERMINAL', value='declaration_list'), Leaf(type='NONTERMINAL', value='compound_statement')])])]), Rule(name='declaration_list', productions=[Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration')])]), Production(items=[ProductionPart(optional=False, star=False, items=[Leaf(type='NONTERMINAL', value='declaration_list'), Leaf(type='NONTERMINAL', value='declaration')])])])])
parser = Parser(grammar)
